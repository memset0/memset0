name: Vote

on:
  issues:
    types: [opened]

jobs:
  vote:
    runs-on: ubuntu-latest
    if: startsWith(github.event.issue.title, '> vote ')
    steps:
      - uses: actions/checkout@v2
      - name: Setup
        uses: ./.github/actions/setup
      - name: Set env
        run: |
          echo "REPOSITORY=${{ github.repository }}" >> $GITHUB_ENV
          echo "ISSUE_ID=${{ github.event.issue.number }}" >> $GITHUB_ENV
          echo "ISSUE_USER=${{ github.event.issue.user.login }}" >> $GITHUB_ENV
          echo "ISSUE_TITLE=${{ github.event.issue.title }}" >> $GITHUB_ENV
      - name: Vote
        run: |
          npm run issue
      - name: Check comments.md
        run: cat .comments.md
      - name: Notification
        uses: ./.github/actions/notification
        with:
          user: ${{ github.event.issue.user.login }}
          message: voted
      - name: Check notification.html
        run: cat pages/notification.md
      - name: Build
        uses: ./.github/actions/build
        with:
          netease-phone: ${{ secrets.NETEASE_PHONE }}
          netease-password: ${{ secrets.NETEASE_PASSWORD }}
      - name: Check README.md
        run: cat README.md
      - name: Check tags.md
        run: cat pages/tags.md
      - name: Generate tag cloud image
        uses: ./.github/actions/tagcloud
      - name: 'Read file contents'
        id: comments
        uses: andstor/file-reader-action@v1
        with:
          path: '.comments.md'
      - name: Close issue
        uses: peter-evans/close-issue@v1
        with:
          comment: ${{ steps.comments.outputs.contents }}
      - name: Deploy
        uses: ./.github/actions/deploy
        with:
          message: Voted by @${{ github.event.issue.user.login }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          ci-token: ${{ serects.CI_BOT_TOKEN }}
